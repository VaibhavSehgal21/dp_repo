 int lis(vector<int>& arr) {
        // code here
        int n=arr.size();
        
        
        vector<int> dp(n,1);
        vector<int> hash(n,1);
        
        for(int ind=0;ind<n;ind++){
            hash[ind]=ind;
            for(int prev=0;prev<ind;prev++){
                
                if(arr[ind]>arr[prev] && 1+dp[prev]>dp[ind])
                {
                    dp[ind]=1+dp[prev];
                    hash[ind]=prev;
                }
            }
        }
        
        int ans=-1;
        int lastIndex=0;
        
        for(int i=0;i<n;i++){
            
            if(ans<dp[i]){
                ans=dp[i];
                lastIndex=i;
            }    
        }
   
        vector<int> v;
        
        while(lastIndex!=hash[lastIndex]){
            v.push_back(arr[lastIndex]);
            //  cout<<arr[lastIndex];
            lastIndex=hash[lastIndex];
            
        }
         v.push_back(arr[lastIndex]);
        
        reverse(v.begin(),v.end());
        
      
        
        // cout<<endl;
        return ans ;
        
    }
